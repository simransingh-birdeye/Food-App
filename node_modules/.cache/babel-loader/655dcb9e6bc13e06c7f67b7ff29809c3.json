{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'Cart',\n  initialState: {\n    items: [],\n    totalAmount: 0\n  },\n  reducers: {\n    add(state, action) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n        let updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.payload);\n      }\n\n      const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n      state.totalAmount = { ...updatedTotalAmount\n      };\n      state.items = updatedItems;\n    },\n\n    remove(state, action) {\n      const newState = { ...state\n      }; //\n\n      const existingCartItemIndex = newState.items.findIndex(item => item.id === action.payload.id);\n      const existingItem = newState.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n\n      if (existingItem.amount === 1) {\n        updatedItems = newState.items.filter(item => item.id !== action.payload.id);\n      } else {\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedItems = [...newState.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      state.totalAmount = updatedTotalAmount;\n      state.items = updatedItems;\n    }\n\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalAmount","reducers","add","state","action","existingCartItemIndex","findIndex","item","id","payload","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","remove","newState","existingItem","filter","actions","reducer"],"sources":["/Users/simransingh/Downloads/React Practice/food app/src/store/Reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n    name: 'Cart',\n    initialState :{\n        items: [],\n        totalAmount: 0\n    },\n    reducers: {\n        add(state, action) {\n            const existingCartItemIndex = state.items.findIndex((item) => item.id === action.payload.id);\n            const existingCartItem = state.items[existingCartItemIndex];\n            let updatedItems;\n            if (existingCartItem) {\n                let updatedItem = {\n                    ...existingCartItem, amount: existingCartItem.amount + action.payload.amount\n                }\n                updatedItems = [...state.items];\n                updatedItems[existingCartItemIndex] = updatedItem;\n            } else {\n                updatedItems = state.items.concat(action.payload);\n            }\n            const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n            state.totalAmount = {...updatedTotalAmount};\n            state.items = updatedItems;\n        },\n        remove(state, action) {\n            const newState = {...state}//\n            const existingCartItemIndex = newState.items.findIndex(item => item.id === action.payload.id)\n            const existingItem = newState.items[existingCartItemIndex];\n            const updatedTotalAmount = state.totalAmount - existingItem.price;\n            let updatedItems;\n            if (existingItem.amount === 1) {\n                updatedItems = newState.items.filter(item => item.id !== action.payload.id);\n            } else {\n                const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n                updatedItems = [...newState.items];\n                updatedItems[existingCartItemIndex] = updatedItem;\n            }\n            state.totalAmount = updatedTotalAmount;\n            state.items = updatedItems;\n        }\n    }\n});\n\nexport const {add, remove}  = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE,EADG;IAEVC,WAAW,EAAE;EAFH,CAFY;EAM1BC,QAAQ,EAAE;IACNC,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACf,MAAMC,qBAAqB,GAAGF,KAAK,CAACJ,KAAN,CAAYO,SAAZ,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA3D,CAA9B;MACA,MAAME,gBAAgB,GAAGP,KAAK,CAACJ,KAAN,CAAYM,qBAAZ,CAAzB;MACA,IAAIM,YAAJ;;MACA,IAAID,gBAAJ,EAAsB;QAClB,IAAIE,WAAW,GAAG,EACd,GAAGF,gBADW;UACOG,MAAM,EAAEH,gBAAgB,CAACG,MAAjB,GAA0BT,MAAM,CAACK,OAAP,CAAeI;QADxD,CAAlB;QAGAF,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACJ,KAAV,CAAf;QACAY,YAAY,CAACN,qBAAD,CAAZ,GAAsCO,WAAtC;MACH,CAND,MAMO;QACHD,YAAY,GAAGR,KAAK,CAACJ,KAAN,CAAYe,MAAZ,CAAmBV,MAAM,CAACK,OAA1B,CAAf;MACH;;MACD,MAAMM,kBAAkB,GAAGZ,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACK,OAAP,CAAeO,KAAf,GAAuBZ,MAAM,CAACK,OAAP,CAAeI,MAArF;MACAV,KAAK,CAACH,WAAN,GAAoB,EAAC,GAAGe;MAAJ,CAApB;MACAZ,KAAK,CAACJ,KAAN,GAAcY,YAAd;IACH,CAjBK;;IAkBNM,MAAM,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAClB,MAAMc,QAAQ,GAAG,EAAC,GAAGf;MAAJ,CAAjB,CADkB,CACS;;MAC3B,MAAME,qBAAqB,GAAGa,QAAQ,CAACnB,KAAT,CAAeO,SAAf,CAAyBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA5D,CAA9B;MACA,MAAMW,YAAY,GAAGD,QAAQ,CAACnB,KAAT,CAAeM,qBAAf,CAArB;MACA,MAAMU,kBAAkB,GAAGZ,KAAK,CAACH,WAAN,GAAoBmB,YAAY,CAACH,KAA5D;MACA,IAAIL,YAAJ;;MACA,IAAIQ,YAAY,CAACN,MAAb,KAAwB,CAA5B,EAA+B;QAC3BF,YAAY,GAAGO,QAAQ,CAACnB,KAAT,CAAeqB,MAAf,CAAsBb,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAAzD,CAAf;MACH,CAFD,MAEO;QACH,MAAMI,WAAW,GAAG,EAAE,GAAGO,YAAL;UAAmBN,MAAM,EAAEM,YAAY,CAACN,MAAb,GAAsB;QAAjD,CAApB;QACAF,YAAY,GAAG,CAAC,GAAGO,QAAQ,CAACnB,KAAb,CAAf;QACAY,YAAY,CAACN,qBAAD,CAAZ,GAAsCO,WAAtC;MACH;;MACDT,KAAK,CAACH,WAAN,GAAoBe,kBAApB;MACAZ,KAAK,CAACJ,KAAN,GAAcY,YAAd;IACH;;EAjCK;AANgB,CAAD,CAA7B;AA2CA,OAAO,MAAM;EAACT,GAAD;EAAMe;AAAN,IAAiBrB,SAAS,CAACyB,OAAjC;AACP,eAAezB,SAAS,CAAC0B,OAAzB"},"metadata":{},"sourceType":"module"}